<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fornula.domain.item.mapper.java.ItemBoardMapper">
	<!-- 상품 게시판에서 상품 리스트들을 뽑을 때 사용하는 SQL문 -->
	<select id="selectItemList" resultType="com.fornula.domain.item.dto.itemboard.ItemPhotoCategoryCart">
	    SELECT item_idx
	           ,expert_idx
	           ,item_name
	           ,item_content
	           ,price
	           ,item_date
	           ,itemfile_name
	           ,photo_idx
	           ,category_idx
	           ,small
	    FROM (
	        SELECT i.item_idx
	               ,i.expert_idx
	               ,i.item_name
	               ,i.item_content
	               ,i.price
	               ,i.item_date
	               ,p.itemfile_name
	               ,p.photo_idx
	               ,i.category_idx
	               ,c.small
	               ,ROWNUM rn
	        FROM item i
	        INNER JOIN photo p ON i.item_idx = p.item_idx
	        INNER JOIN category c ON i.category_idx = c.category_idx
	        WHERE i.item_status = 1
	        ORDER BY i.item_idx DESC
	    )
	    WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 카테고리를 입력받아서 해당 카테고리에 포함되어 있는 상품들만 출력하기 -->
	<!-- 기능 보류 파이널때 사용할 수도 -->
	<select id="selectCategoryItemList" resultType="com.fornula.domain.item.dto.itemboard.ItemPhotoCategoryCart">
	    SELECT i.item_idx
	           ,i.expert_idx
	           ,i.item_name
	           ,i.item_content
	           ,i.price
	           ,i.item_date
	           ,i.category_idx
	           ,c.small
	           ,p.itemfile_name
	           ,p.photo_idx
	    FROM category c
	    INNER JOIN item i ON c.category_idx = i.category_idx
	    INNER JOIN photo p ON i.item_idx = p.item_idx
	    WHERE c.category_idx = #{categoryIdx}
	        AND i.item_status = 1
	</select>
	
	<!-- 우리는 상품 올린다음 수정하는 기능은 따로 안만들었으니 관리자가 상품 게시글을 삭제처리(상품상태 컬럼값을 0으로 변경)할 때 사용할 SQL문 여기다가 작성해 민환아 -->
	<update id="updateItem">
		update item 
		set item_status=#{itemStatus} 
		where item_idx=#{itemIdx}
	</update>
	
	<!-- 검색창에서 상품 이름 중 일부분을 검색시에 해당 검색어가 상품 이름에 들어가있는 모든 상품을 검색하기 -->
	<select id="searchItemList" resultType="com.fornula.domain.item.dto.itemboard.ItemPhotoCategoryCart">
	    SELECT i.item_idx
	           ,i.expert_idx
	           ,i.item_name
	           ,i.item_content
	           ,i.price
	           ,i.item_date
	           ,i.category_idx
	           ,c.small
	           ,p.itemfile_name
	           ,p.photo_idx
	    FROM item i
	    INNER JOIN photo p ON i.item_idx = p.item_idx
	    INNER JOIN category c ON i.category_idx = c.category_idx
	    WHERE i.item_status = 1
	          AND i.item_name LIKE '%' || #{itemName} || '%'
	</select>
	
	<!-- 총 상품 게시글의 수를 카운트 하는 용도 -->
	<select id="selectItemBoardCount" resultType="int">
	    SELECT COUNT(item_idx) 
	    FROM item
	    WHERE item_status = 1
	</select>
</mapper>